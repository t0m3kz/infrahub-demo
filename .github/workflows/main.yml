---
name: CI
on:
  - push
jobs:
  code-qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - run: |
          pip install uv
          uv sync
      - run: |
          echo "Formating code"
          uv run ruff format
          uv run ruff check --select I --fix .
      - run: |
          echo "Running linters"
          uv run ruff check
      - run: |
          echo "Running type checks"
          uv run mypy .
      - run: |
          echo "Running validation"
          uv run yamllint -d "{extends: default, ignore: [.github/, .venv/ , .dev/ ]}" \
                   -d "{rules: {truthy: {allowed-values: ['true', 'false', 'yes', 'no', 'on', 'off', 'True', 'False']}}}" .
  tests:
    name: Testing plugin
    needs: code-qa
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      INFRAHUB_DB_TYPE: neo4j
      INFRAHUB_API_TOKEN: '06438eb2-8019-4776-878c-0941b1f1d1ec'
      INFRAHUB_TIMEOUT: 600
      INFRAHUB_TESTING_LOG_LEVEL: INFO
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dev dependencies
        run: |
          pip install uv
          uv sync
      - name: "Set environment variables"
        run: |
          RUNNER_NAME=$(echo "${{ runner.name }}" | grep -o 'ghrunner[0-9]\+' | sed 's/ghrunner\([0-9]\+\)/ghrunner_\1/')
          echo "PYTEST_DEBUG_TEMPROOT=/var/lib/github/${RUNNER_NAME}/_temp" >> $GITHUB_ENV
      - name: Run pytest
        run: |
          uv run pytest tests/ -vv

  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
    needs: tests
    name: Create release in GitHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: "3.10"
      - run: |
          pip install uv
          echo "TAG=v$(uvx --from=toml-cli toml get --toml-path=pyproject.toml project.version)" >> $GITHUB_ENV
      - name: Creates a release in GitHub and uploads attachments
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.TAG }}
          tag_name: ${{ env.TAG }}
          generate_release_notes: true
  # document:
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   permissions: write-all
  #   needs: tests
  #   name: Update documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v5
  #     - uses: actions/setup-python@v6
  #       with:
  #         python-version: "3.10"
  #     - run: |
  #         pip install uv
  #         uv sync
  #     - run: uv run mkdocs gh-deploy --force
